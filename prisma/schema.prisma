generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id              String    @id
    hashed_password String
    user            String    @unique
    sessions        Session[]
    replies         Reply[]
    posts           Post[]
    likes           Like[]
}

model Session {
    id        String   @id
    userId    String
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Ingredient {
    id       String @id @default(uuid())
    recipeId String
    name     String
    quantity Float
    unit     String
    recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Recipe {
    id          String       @id @default(uuid())
    postId      String       @unique
    title       String
    ingredients Ingredient[]
    body        String
    Post        Post         @relation(fields: [postId], references: [id])
}

model Reply {
    id     String @id @default(uuid())
    userId String
    postId String
    body   String
    post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
    id     String  @id @default(uuid())
    userId String
    user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    Post   Post?   @relation(fields: [postId], references: [id])
    postId String?
}

model Post {
    id       String  @id @default(uuid())
    userId   String
    recipe   Recipe?
    likes    Like[]
    replies  Reply[]
    user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
